name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - charlelie
  pull_request:
    branches:
      - main
      - charlelie

env:
  SONAR_USER_HOME: ${{ github.workspace }}/.sonar
  GIT_DEPTH: "0"
  TF_LOG: "DEBUG"

jobs:
  sonarcloud-check:
    runs-on: ubuntu-latest
    container:
      image: sonarsource/sonar-scanner-cli:latest
      options: --entrypoint ""
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Fetch the entire git history
    - name: Cache SonarCloud packages
      uses: actions/cache@v2
      with:
        path: .sonar/cache
        key: sonarcloud-${{ github.job }}
    - name: Run sonar-scanner
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Pass the SonarCloud token as an environment variable
      run: |
        sonar-scanner \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.projectKey=CharlelieL_GestionStock \
          -Dsonar.organization=polka \
          -Dsonar.sources=. \
          -Dsonar.login=$SONAR_TOKEN


  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - run: npm ci
      - run: npm test

      # Build and push Docker image to Docker Hub
      - name: Build Docker Image
        run: docker build -t tarkipn/gestionstock:latest .

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker Image to Docker Hub
        run: docker push tarkipn/gestionstock:latest

      # Terraform setup and execution
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Set Terraform AzureRM Authentication Environment Variables
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV
        
      - name: Terraform Init
        run: |
          cd azure-migration
          terraform init
      - name: Terraform Apply
        run: |  
          cd azure-migration
          terraform apply -auto-approve \
            -var="ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}" \
            -var="ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}" \
            -var="ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}" \
            -var="DATABASE_USER=${{ secrets.DATABASE_USER }}" \
            -var="DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" \
            -var="ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}" \
            -var="DATABASE_NAME=${{ secrets.DATABASE_NAME }}" \
            -var="REDDIS_URL=${{ secrets.REDDIS_URL }}"